/*
 * Sandpiles.java
 *
 * Created on October 1, 2008, 10:35 PM
 */



/**
 *
 * @author  headb
 */


import javax.swing.Timer;
import javax.swing.JLabel;
import java.awt.CardLayout;

//import java.awt.event.MouseListener;

//import java.awt.event.MouseAdapter;
//import java.awt.event.KeyEvent;
//import java.awt.event.KeyListener;
//import java.awt.event.KeyAdapter;


public class Sandpiles extends javax.swing.JFrame {
	private static final String ADD_SAND_STATE = "Add Sand";
	private static final String DEL_SAND_STATE = "Remove Sand";
	private static final String MAKE_GRID_STATE = "Make Grid";
	private static final String MAKE_HEX_GRID_STATE = "Make Hex Grid";
	private static final String ADD_VERTEX_STATE = "Add Vertex";
	private static final String DEL_VERTEX_STATE = "Delete Vertex";
	private static final String ADD_EDGE_STATE = "Add Edge";
	private static final String DEL_EDGE_STATE = "Delete Edge";
	private static final String ADD_UNDI_EDGE_STATE = "Add Undirected Edge";
	private static final String DEL_UNDI_EDGE_STATE = "Delete Undirected Edge";
	private static final String MAKE_HONEYCOMB_STATE = "Make Honeycomb";
	private static final String CONFIG_MANAGER_STATE = "Config Manager";
	private static final String VISUAL_OPTIONS_STATE = "Visual Options";
	
	//built-in configs
	private static final String MAX_CONFIG = "Max Stable";
	private static final String IDENTITY_CONFIG = "Identity";
	private static final String BURNING_CONFIG = "Burning";
	private static final String DUAL_CONFIG = "Dual of Current";
	private static final String ONES_CONFIG = "Ones Everywhere";
	
	
	
    private boolean running = false;
    private Timer runTimer;
    
    /** Creates new form Sandpiles */
    public Sandpiles() {
        initComponents();
        runTimer = new Timer(10,sandpileViewPanel);
		//controlStateComboBox.addActionListener((SandpilePanel) sandpileViewPanel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        makeHoneycombOptionsPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        makeHoneycombBorderComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        makeHoneycombRadiusField = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        addSandOptionsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        numOfGrainsField = new javax.swing.JTextField();
        makeGridOptionsPanel = new javax.swing.JPanel();
        gridSizeLabel = new javax.swing.JLabel();
        gridRowsField = new javax.swing.JTextField();
        gridSizeCrossLabel = new javax.swing.JLabel();
        gridColsField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nBorderComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        sBorderComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        eBorderComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        wBorderComboBox = new javax.swing.JComboBox();
        addEdgeOptionsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        weightField = new javax.swing.JTextField();
        blankOptionsPanel = new javax.swing.JPanel();
        configManagerOptionsPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        configSelectList = new javax.swing.JList();
        addConfigButton = new javax.swing.JButton();
        setConfigButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        visualOptionsPanel = new javax.swing.JPanel();
        repaintCheckBox = new javax.swing.JCheckBox();
        colorCheckBox = new javax.swing.JCheckBox();
        labelsCheckBox = new javax.swing.JCheckBox();
        changingNodeSizeCheckBox = new javax.swing.JCheckBox();
        jFrame1 = new javax.swing.JFrame();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        sandpileViewPanel = new SandpilePanel();
        jPanel1 = new javax.swing.JPanel();
        runButton = new javax.swing.JToggleButton();
        delaySlider = new javax.swing.JSlider();
        optionsContainerPanel = new javax.swing.JPanel();
        delayTextField = new javax.swing.JTextField();
        controlStateComboBox = new javax.swing.JComboBox();
        clearSandButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        delayLabel = new javax.swing.JLabel();
        stepButton = new javax.swing.JButton();

        jLabel9.setText("Border:");

        makeHoneycombBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected" }));
        makeHoneycombBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeHoneycombBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel10.setText("Radius:");

        makeHoneycombRadiusField.setText("5");
        makeHoneycombRadiusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeHoneycombRadiusFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout makeHoneycombOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(makeHoneycombOptionsPanel);
        makeHoneycombOptionsPanel.setLayout(makeHoneycombOptionsPanelLayout);
        makeHoneycombOptionsPanelLayout.setHorizontalGroup(
            makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeHoneycombOptionsPanelLayout.createSequentialGroup()
                .add(makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(makeHoneycombOptionsPanelLayout.createSequentialGroup()
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(makeHoneycombBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(makeHoneycombOptionsPanelLayout.createSequentialGroup()
                        .add(jLabel10)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(makeHoneycombRadiusField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(32, 32, 32))
        );
        makeHoneycombOptionsPanelLayout.setVerticalGroup(
            makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeHoneycombOptionsPanelLayout.createSequentialGroup()
                .add(makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(makeHoneycombRadiusField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(makeHoneycombBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("# of Grains:");

        numOfGrainsField.setText("1");
        numOfGrainsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numOfGrainsFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout addSandOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(addSandOptionsPanel);
        addSandOptionsPanel.setLayout(addSandOptionsPanelLayout);
        addSandOptionsPanelLayout.setHorizontalGroup(
            addSandOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(addSandOptionsPanelLayout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(numOfGrainsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        addSandOptionsPanelLayout.setVerticalGroup(
            addSandOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(addSandOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jLabel1)
                .add(numOfGrainsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        gridSizeLabel.setText("Grid Size:");

        gridRowsField.setText("5");
        gridRowsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridRowsFieldActionPerformed(evt);
            }
        });
        gridRowsField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                gridRowsFieldPropertyChange(evt);
            }
        });

        gridSizeCrossLabel.setText("X");

        gridColsField.setText("5");
        gridColsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridColsFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("N Border:");

        nBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        nBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("S Border:");

        sBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        sBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("E Border:");

        eBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        eBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("W Border:");

        wBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        wBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wBorderComboBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout makeGridOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(makeGridOptionsPanel);
        makeGridOptionsPanel.setLayout(makeGridOptionsPanelLayout);
        makeGridOptionsPanelLayout.setHorizontalGroup(
            makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeGridOptionsPanelLayout.createSequentialGroup()
                .add(gridSizeLabel)
                .add(2, 2, 2)
                .add(gridRowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(gridSizeCrossLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(gridColsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(makeGridOptionsPanelLayout.createSequentialGroup()
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(sBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(makeGridOptionsPanelLayout.createSequentialGroup()
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(makeGridOptionsPanelLayout.createSequentialGroup()
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(wBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(eBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        makeGridOptionsPanelLayout.setVerticalGroup(
            makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeGridOptionsPanelLayout.createSequentialGroup()
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(gridSizeLabel)
                    .add(gridRowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(gridSizeCrossLabel)
                    .add(gridColsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(nBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(sBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(eBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(wBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        jLabel2.setText("Weight:");

        weightField.setText("1");
        weightField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout addEdgeOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(addEdgeOptionsPanel);
        addEdgeOptionsPanel.setLayout(addEdgeOptionsPanelLayout);
        addEdgeOptionsPanelLayout.setHorizontalGroup(
            addEdgeOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(addEdgeOptionsPanelLayout.createSequentialGroup()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(weightField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        addEdgeOptionsPanelLayout.setVerticalGroup(
            addEdgeOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(addEdgeOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jLabel2)
                .add(weightField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout blankOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(blankOptionsPanel);
        blankOptionsPanel.setLayout(blankOptionsPanelLayout);
        blankOptionsPanelLayout.setHorizontalGroup(
            blankOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 55, Short.MAX_VALUE)
        );
        blankOptionsPanelLayout.setVerticalGroup(
            blankOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 17, Short.MAX_VALUE)
        );

        configSelectList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { MAX_CONFIG, IDENTITY_CONFIG, BURNING_CONFIG, DUAL_CONFIG, ONES_CONFIG };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(configSelectList);

        addConfigButton.setText("Add");
        addConfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addConfigButtonActionPerformed(evt);
            }
        });

        setConfigButton.setText("Set");
        setConfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setConfigButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout configManagerOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(configManagerOptionsPanel);
        configManagerOptionsPanel.setLayout(configManagerOptionsPanelLayout);
        configManagerOptionsPanelLayout.setHorizontalGroup(
            configManagerOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
            .add(configManagerOptionsPanelLayout.createSequentialGroup()
                .add(addConfigButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 67, Short.MAX_VALUE)
                .add(setConfigButton))
        );
        configManagerOptionsPanelLayout.setVerticalGroup(
            configManagerOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(configManagerOptionsPanelLayout.createSequentialGroup()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(configManagerOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addConfigButton)
                    .add(setConfigButton))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        repaintCheckBox.setSelected(true);
        repaintCheckBox.setText("Repaint");
        repaintCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repaintCheckBoxActionPerformed(evt);
            }
        });

        colorCheckBox.setSelected(true);
        colorCheckBox.setText("Color");
        colorCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorCheckBoxActionPerformed(evt);
            }
        });

        labelsCheckBox.setSelected(true);
        labelsCheckBox.setText("Labels");
        labelsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labelsCheckBoxActionPerformed(evt);
            }
        });

        changingNodeSizeCheckBox.setSelected(true);
        changingNodeSizeCheckBox.setText("Changing Node Size");
        changingNodeSizeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changingNodeSizeCheckBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout visualOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(visualOptionsPanel);
        visualOptionsPanel.setLayout(visualOptionsPanelLayout);
        visualOptionsPanelLayout.setHorizontalGroup(
            visualOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(visualOptionsPanelLayout.createSequentialGroup()
                .add(visualOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(repaintCheckBox)
                    .add(colorCheckBox)
                    .add(labelsCheckBox)
                    .add(changingNodeSizeCheckBox))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        visualOptionsPanelLayout.setVerticalGroup(
            visualOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(visualOptionsPanelLayout.createSequentialGroup()
                .add(repaintCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(colorCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(labelsCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(changingNodeSizeCheckBox)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jFrame1Layout = new org.jdesktop.layout.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sandpiles");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("sandpilesMainFrame"); // NOI18N

        jSplitPane1.setDividerLocation(600);
        jSplitPane1.setResizeWeight(1.0);
        jSplitPane1.setOneTouchExpandable(true);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        sandpileViewPanel.setBackground(new java.awt.Color(0, 0, 0));
        sandpileViewPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        sandpileViewPanel.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        sandpileViewPanel.setPreferredSize(new java.awt.Dimension(2000, 2000));
        sandpileViewPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sandpileViewPanelMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sandpileViewPanelMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout sandpileViewPanelLayout = new org.jdesktop.layout.GroupLayout(sandpileViewPanel);
        sandpileViewPanel.setLayout(sandpileViewPanelLayout);
        sandpileViewPanelLayout.setHorizontalGroup(
            sandpileViewPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1996, Short.MAX_VALUE)
        );
        sandpileViewPanelLayout.setVerticalGroup(
            sandpileViewPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1996, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(sandpileViewPanel);

        jSplitPane1.setLeftComponent(jScrollPane1);

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        delaySlider.setMaximum(1000);
        delaySlider.setToolTipText("Adjusts the number of milliseconds between each update.");
        delaySlider.setValue(100);
        delaySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                delaySliderStateChanged(evt);
            }
        });

        optionsContainerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));
        optionsContainerPanel.setLayout(new java.awt.CardLayout());
        optionsContainerPanel.add(blankOptionsPanel, ADD_VERTEX_STATE);
        //optionsContainerPanel.add(blankOptionsPanel, DEL_VERTEX_STATE);
        optionsContainerPanel.add(makeGridOptionsPanel, MAKE_GRID_STATE);
        optionsContainerPanel.add(addSandOptionsPanel, ADD_SAND_STATE);
        //optionsContainerPanel.add(addSandOptionsPanel, DEL_SAND_STATE);
        optionsContainerPanel.add(addEdgeOptionsPanel, ADD_EDGE_STATE);
        optionsContainerPanel.add(makeHoneycombOptionsPanel, MAKE_HONEYCOMB_STATE);
        optionsContainerPanel.add(configManagerOptionsPanel, CONFIG_MANAGER_STATE);
        optionsContainerPanel.add(visualOptionsPanel, VISUAL_OPTIONS_STATE);
        //optionsContainerPanel.add(addEdgeOptionsPanel, DEL_EDGE_STATE);
        //optionsContainerPanel.add(addEdgeOptionsPanel, ADD_UNDI_EDGE_STATE);
        //optionsContainerPanel.add(addEdgeOptionsPanel, DEL_UNDI_EDGE_STATE);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, delaySlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), delayTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        delayTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delayTextFieldActionPerformed(evt);
            }
        });

        controlStateComboBox.setMaximumRowCount(16);
        controlStateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ADD_VERTEX_STATE, DEL_VERTEX_STATE, ADD_EDGE_STATE, DEL_EDGE_STATE, ADD_UNDI_EDGE_STATE, DEL_UNDI_EDGE_STATE, ADD_SAND_STATE, DEL_SAND_STATE, CONFIG_MANAGER_STATE, MAKE_GRID_STATE, MAKE_HEX_GRID_STATE, MAKE_HONEYCOMB_STATE, VISUAL_OPTIONS_STATE}));
        controlStateComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                controlStateComboBoxItemStateChanged(evt);
            }
        });
        controlStateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlStateComboBoxActionPerformed(evt);
            }
        });

        clearSandButton.setText("Clear Sand");
        clearSandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSandButtonActionPerformed(evt);
            }
        });

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        delayLabel.setText("Delay:");

        stepButton.setText("Step");
        stepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepButtonActionPerformed(evt);
            }
        });
        stepButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stepButtonMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(clearSandButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(24, 24, 24)
                                .add(delayLabel))
                            .add(runButton))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 94, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(delayTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(13, 13, 13))
                            .add(stepButton)))
                    .add(delaySlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .add(controlStateComboBox, 0, 244, Short.MAX_VALUE))
                .addContainerGap())
            .add(optionsContainerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(quitButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(runButton)
                    .add(stepButton))
                .add(9, 9, 9)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(delayTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(delayLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(delaySlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(clearSandButton)
                .add(18, 18, 18)
                .add(controlStateComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(optionsContainerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(quitButton)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void gridRowsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridRowsFieldActionPerformed
	//sandpileViewPanel.setGridRows( Integer.parseInt(gridRowsField.getText() ) );
}//GEN-LAST:event_gridRowsFieldActionPerformed

private void gridColsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridColsFieldActionPerformed
	//sandpileViewPanel.setGridCols( Integer.parseInt( gridColsField.getText() ) );
}//GEN-LAST:event_gridColsFieldActionPerformed

private void gridRowsFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_gridRowsFieldPropertyChange
// TODO add your handling code here:
}//GEN-LAST:event_gridRowsFieldPropertyChange

private void numOfGrainsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numOfGrainsFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_numOfGrainsFieldActionPerformed

private void sandpileViewPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sandpileViewPanelMouseClicked

}//GEN-LAST:event_sandpileViewPanelMouseClicked

private void weightFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_weightFieldActionPerformed

private void sandpileViewPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sandpileViewPanelMouseReleased
	String currentState = (String) controlStateComboBox.getSelectedItem();
	int x = evt.getX();
	int y = evt.getY();
	if(currentState.equals(ADD_SAND_STATE)) {
		sandpileViewPanel.addSandControl(x,y, Integer.valueOf(numOfGrainsField.getText() ) );
	}else if(currentState.equals(DEL_SAND_STATE)){
		sandpileViewPanel.addSandControl(x,y, -Integer.valueOf(numOfGrainsField.getText() ) );
	}else if(currentState.equals(MAKE_GRID_STATE)){
		sandpileViewPanel.makeGrid2(Integer.valueOf(gridRowsField.getText()), Integer.valueOf(gridColsField.getText()), x, y, 
				nBorderComboBox.getSelectedIndex(), 
				sBorderComboBox.getSelectedIndex(), 
				eBorderComboBox.getSelectedIndex(), 
				wBorderComboBox.getSelectedIndex());
	}else if(currentState.equals(MAKE_HEX_GRID_STATE)){
		sandpileViewPanel.makeHexGrid(Integer.valueOf(gridRowsField.getText()), Integer.valueOf(gridColsField.getText()), x, y, 
				nBorderComboBox.getSelectedIndex(), 
				sBorderComboBox.getSelectedIndex(), 
				eBorderComboBox.getSelectedIndex(), 
				wBorderComboBox.getSelectedIndex());
	}else if(currentState.equals(ADD_EDGE_STATE)) {
		sandpileViewPanel.addEdgeControl(x, y, Integer.valueOf(weightField.getText()));
	}else if(currentState.equals(DEL_EDGE_STATE)) {
		sandpileViewPanel.delEdgeControl(x, y, Integer.valueOf(weightField.getText()));
	}else if(currentState.equals(ADD_UNDI_EDGE_STATE)) {
		sandpileViewPanel.addUndiEdgeControl(x, y, Integer.valueOf(weightField.getText()));
	}else if(currentState.equals(DEL_UNDI_EDGE_STATE)) {
		sandpileViewPanel.delUndiEdgeControl(x, y, Integer.valueOf(weightField.getText()));
	}else if(currentState.equals(ADD_VERTEX_STATE)) {
		sandpileViewPanel.addVertexControl(x, y);
	}else if(currentState.equals(DEL_VERTEX_STATE)) {
		sandpileViewPanel.delVertexControl(x, y);
	}else if(currentState.equals(MAKE_HONEYCOMB_STATE)){
		sandpileViewPanel.makeHoneycomb(Integer.valueOf(makeHoneycombRadiusField.getText()),x, y,  makeHoneycombBorderComboBox.getSelectedIndex());
	}
}//GEN-LAST:event_sandpileViewPanelMouseReleased

private void nBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nBorderComboBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_nBorderComboBoxActionPerformed

private void sBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sBorderComboBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_sBorderComboBoxActionPerformed

private void eBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eBorderComboBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_eBorderComboBoxActionPerformed

private void wBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wBorderComboBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_wBorderComboBoxActionPerformed

private void repaintCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repaintCheckBoxActionPerformed
	sandpileViewPanel.setRepaint(repaintCheckBox.isSelected() );
}//GEN-LAST:event_repaintCheckBoxActionPerformed

private void colorCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorCheckBoxActionPerformed
	sandpileViewPanel.setColor(colorCheckBox.isSelected());
}//GEN-LAST:event_colorCheckBoxActionPerformed

private void labelsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labelsCheckBoxActionPerformed
	sandpileViewPanel.setLabels(labelsCheckBox.isSelected());
}//GEN-LAST:event_labelsCheckBoxActionPerformed

private void makeHoneycombBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeHoneycombBorderComboBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_makeHoneycombBorderComboBoxActionPerformed

private void makeHoneycombRadiusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeHoneycombRadiusFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_makeHoneycombRadiusFieldActionPerformed

private void addConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addConfigButtonActionPerformed
	String selection = (String)configSelectList.getSelectedValue();
	if(selection.equals(MAX_CONFIG)){
		sandpileViewPanel.addMaxStableConfig();
	}else if(selection.equals(DUAL_CONFIG)){
		sandpileViewPanel.addDualConfig();
	}else if(selection.equals(ONES_CONFIG)){
		sandpileViewPanel.addSandEverywhere(1);
	}else if(selection.equals(IDENTITY_CONFIG)){
		sandpileViewPanel.addIdentity();
	}
}//GEN-LAST:event_addConfigButtonActionPerformed

private void setConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setConfigButtonActionPerformed
	String selection = (String)configSelectList.getSelectedValue();
	if(selection.equals(MAX_CONFIG)){
		sandpileViewPanel.setToMaxStableConfig();
	}else if(selection.equals(DUAL_CONFIG)){
		sandpileViewPanel.setToDualConfig();
	}else if(selection.equals(ONES_CONFIG)){
		sandpileViewPanel.setSandEverywhere(1);
	}else if(selection.equals(IDENTITY_CONFIG)){
		sandpileViewPanel.setToIdentity();
	}
}//GEN-LAST:event_setConfigButtonActionPerformed

private void stepButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stepButtonMouseClicked

}//GEN-LAST:event_stepButtonMouseClicked

private void stepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepButtonActionPerformed
sandpileViewPanel.update();
}//GEN-LAST:event_stepButtonActionPerformed

private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
System.exit(0);
}//GEN-LAST:event_quitButtonActionPerformed

private void clearSandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSandButtonActionPerformed
sandpileViewPanel.clearSand();
}//GEN-LAST:event_clearSandButtonActionPerformed

private void controlStateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlStateComboBoxActionPerformed
sandpileViewPanel.setControlState(controlStateComboBox.getSelectedIndex());
}//GEN-LAST:event_controlStateComboBoxActionPerformed

private void controlStateComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_controlStateComboBoxItemStateChanged
String currentState = (String)evt.getItem();
	CardLayout cl = (CardLayout)(optionsContainerPanel.getLayout());
	//cl.show(optionsContainerPanel, (String)evt.getItem());
	if(currentState.equals(ADD_SAND_STATE)||currentState.equals(DEL_SAND_STATE)) {
		cl.show(optionsContainerPanel, ADD_SAND_STATE);
	}else if(currentState.equals(MAKE_GRID_STATE) || currentState.equals(MAKE_HEX_GRID_STATE)){
		cl.show(optionsContainerPanel, MAKE_GRID_STATE);
	}else if(currentState.equals(ADD_EDGE_STATE)||currentState.equals(DEL_EDGE_STATE)||currentState.equals(ADD_UNDI_EDGE_STATE)|| currentState.equals(DEL_UNDI_EDGE_STATE)) {
		cl.show(optionsContainerPanel, ADD_EDGE_STATE);	
	}else if(currentState.equals(ADD_VERTEX_STATE) || currentState.equals(DEL_VERTEX_STATE) ) {
		cl.show(optionsContainerPanel, ADD_VERTEX_STATE);	
	}else if(currentState.equals(MAKE_HONEYCOMB_STATE)){
		cl.show(optionsContainerPanel,MAKE_HONEYCOMB_STATE);
	}else if(currentState.equals(CONFIG_MANAGER_STATE)){
		cl.show(optionsContainerPanel, CONFIG_MANAGER_STATE);
	}else if(currentState.equals(VISUAL_OPTIONS_STATE)){
		cl.show(optionsContainerPanel, VISUAL_OPTIONS_STATE);
	}
}//GEN-LAST:event_controlStateComboBoxItemStateChanged

private void delayTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delayTextFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_delayTextFieldActionPerformed

private void delaySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_delaySliderStateChanged
runTimer.setDelay(delaySlider.getValue());
}//GEN-LAST:event_delaySliderStateChanged

private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
//runTimer.setDelay( delaySlider.getValue());
    if(runTimer.isRunning()) {
        runTimer.stop();
    }else {
        runTimer.start();
    }
}//GEN-LAST:event_runButtonActionPerformed

private void changingNodeSizeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changingNodeSizeCheckBoxActionPerformed
	sandpileViewPanel.setChangingNodeSize(changingNodeSizeCheckBox.isSelected());
}//GEN-LAST:event_changingNodeSizeCheckBoxActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sandpiles().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addConfigButton;
    private javax.swing.JPanel addEdgeOptionsPanel;
    private javax.swing.JPanel addSandOptionsPanel;
    private javax.swing.JPanel blankOptionsPanel;
    private javax.swing.JCheckBox changingNodeSizeCheckBox;
    private javax.swing.JButton clearSandButton;
    private javax.swing.JCheckBox colorCheckBox;
    private javax.swing.JPanel configManagerOptionsPanel;
    private javax.swing.JList configSelectList;
    private javax.swing.JComboBox controlStateComboBox;
    private javax.swing.JLabel delayLabel;
    private javax.swing.JSlider delaySlider;
    private javax.swing.JTextField delayTextField;
    private javax.swing.JComboBox eBorderComboBox;
    private javax.swing.JTextField gridColsField;
    private javax.swing.JTextField gridRowsField;
    private javax.swing.JLabel gridSizeCrossLabel;
    private javax.swing.JLabel gridSizeLabel;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JCheckBox labelsCheckBox;
    private javax.swing.JPanel makeGridOptionsPanel;
    private javax.swing.JComboBox makeHoneycombBorderComboBox;
    private javax.swing.JPanel makeHoneycombOptionsPanel;
    private javax.swing.JTextField makeHoneycombRadiusField;
    private javax.swing.JComboBox nBorderComboBox;
    private javax.swing.JTextField numOfGrainsField;
    private javax.swing.JPanel optionsContainerPanel;
    private javax.swing.JButton quitButton;
    private javax.swing.JCheckBox repaintCheckBox;
    private javax.swing.JToggleButton runButton;
    private javax.swing.JComboBox sBorderComboBox;
    private SandpilePanel sandpileViewPanel;
    private javax.swing.JButton setConfigButton;
    private javax.swing.JButton stepButton;
    private javax.swing.JPanel visualOptionsPanel;
    private javax.swing.JComboBox wBorderComboBox;
    private javax.swing.JTextField weightField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}