SandpilesApp contains a NetBeans project with the current code.The current build can be found in SandpilesApp/dist.To run, use "java -jar SandpileApp.jar" from a command line, or just double click on SandpileApp.jar. For FPS output, you must run from the command line, since it prints the FPS to command line right now.SandyNURBS is an experiment with three dimensional representation of sandpile graphs. It will be integrated into SandpileApp eventually. The current build can be found in SandyNURBS/dist-<your system>.Again, to run, use "java -jar SandyNURBS.jar" from a command line, or just double click on SandyNURBS.jar. To see FPS or the current delay, you must run from the command line (both are printed there).The controls are:0     Clears the sand.1     Adds one grain everywhere.d     Drops one grain in the middler      Drops a random grain.p    (Un)Pause. It begins paused.=/-   Speed up/slow down. If you speed up enough, it starts to use a form of frame skipping. The current delay is printed to terminal, negative means frame skipping may happen.c      Display control points. These are the points that tug the NURBS into shape. The heights of these correspond exactly to the number of grains of sand at that location; the height of NURBS is approximate by nature. Starts off.i       Turns temporal interpolation on and off. That is, configurations will transition into each other instead of jumping suddenly. There is no performance hit for this; starts on.f       Prints the fps to terminal. Starts off../,     Increases/decreases the height that each grain adds.u      Updates the simulation (so you can step through while paused).Click and drag to rotate the grid. Mouse wheel to zoom.The grid is 50x50 and starts with 6 grains on each vertex.